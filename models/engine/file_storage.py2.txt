#!/usr/bin/python3

# FileStorage module
import os
import json
from models.base_model import BaseModel


class FileStorage:
    # class serializes instances to a JSON
    # file and deserializes JSON to instances
    __file_path = "file.json"
    __objects = {}

    def all(self):
        # returns the dictionary __objects
        return FileStorage.__objects

    def new(self, obj):
        # sets in __objects the obj with key <obj class name>.id
        key = str(type(obj).__name__) + "." + obj.id
        FileStorage.__objects[key] = obj

    def remove(self, key):
        # removes obj from __objects using the key <obj class name>.id
        FileStorage.__objects.pop(key)

    def save(self):
        # serializes __objects to the JSON file (path: __file_path)
        with open(FileStorage.__file_path, "w") as file:
            objects_dict = {key: value.to_dict() for key, value in FileStorage.__objects.items()}
            json.dump(objects_dict, file)

    def reload(self):
        # deserializes the JSON file to __objects
        if not os.path.exists(FileStorage.__file_path):
            return

        with open(FileStorage.__file_path, "r") as file:
            content = file.read()
            if content is None:
                return
            objects_dict = json.loads(content)
            FileStorage.__objects = {}
            for key, value in objects_dict.items():
                FileStorage.__objects[key] = BaseModel(**value)

